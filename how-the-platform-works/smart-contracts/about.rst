О смарт-контрактах Vostok
========================================

Смарт-контракт это скрипт, проверяющий исходящие транзакции на соблюдение условий, заложенных в скрипт. Механизм скриптов позволяет расширять логику блокчейна под ваши бизнес-задачи.
Комиссия за смарт-контракт фиксирована. Скрипт может быть опубликован как на аккаунт, так и на набор выпущенных вами токенов. После публикации скрипта на аккаунт или набор токенов, к стандарной комиссии 
за операции добавляется 0.004 VST. 
Для аккаунта — проверяться будут все транзакции, исходящие с данного адреса. Аккаунт с опубликованным скриптом называется Смарт-аккаунт.
Для набора токенов — проверяться будут все транзакции с данным набором токенов. Набор токенов с опубликованным скриптом называется Смарт-ассет.
На одном аккаунте может быть только 1 скрипт. Соответственно, любой установленный скрипт заменяет предыдущий, в т.ч. «скрипт по умолчанию».

RIDE
~~~~~

Для создания скрипта в блокчейне Vostok используется язык RIDE. `Описание языка <https://docs.wavesplatform.com/en/technical-details/ride-language/language-description.html>`_.
Скрипты, написанные на RIDE, при проверке исполнения условий могут использовать следующие данные:

* Данные исходящей транзакции.
* Данные аккаунта, от имени которого осуществляется транзакции.
* Данные о балансе третьих аккаунтов.
* Данные о высоте блокчейна.

Основная механика работы скрипта это pattern matching, т.е. сопоставление с образцом. 
В скрипте указываются типы транзакций и проверки для них, с условиями, при которых возможно исполнение соответствующих транзакций. Также доступны возможности запретить транзакцию независимот от условий, 
разрешить независимо от условий, как по одночке, так и механикой «всё, кроме».
Скрипт устанавливается транзакцией типа SetScript, соответственно, её разрешение, запрещение или проверку на условия надо также явно указывать.

.. important:: Скрипт не изменяет транзакцию, только проверяет соответствие условиям.

Сложность скриптов
~~~~~~~~~~~~~~~~~~~~

RIDE не является Тьюринг полным языком, что накладывает ограничения на доступную сложность логики. Вычислительная сложность принудительно ограничена сверху для гарантии производительности сети.
Дополнительная информация по сложности скриптов доступна на странице `Вычислительная сложность скриптов <https://docs.wavesplatform.com/en/technical-details/waves-contracts-language-description/script-performance-tests.html>`_.
Для сложных бизнес-процессов, механика которых не укладывается в один скрипт, возможна комбинация из нескольких скриптов (на нескольких адресах, соответствено), либо комбинации скрипта на наборе токенов и на адресе.
Мы активно развиваем возможно RIDE, в ближайшее время в языке появятся вложенные функции, что расширит его возможности по сложности реализуемых задач.

Подписи
~~~~~~~
Каждая транзакция в блокчейне обладает криптографическим доказательством целостности, основанном на подписи хэша транзакции закрытым ключем адреса. Это также гарантирует неотчуждаемость транзакций от адреса.
Для лучшего понимания механизма работы представьте, что «по умолчанию» на каждом аккаунте установлен скрипт, который проверяет единственное условие для каждой исходящей транкции — принадлежность подписи транзакции адресу отправителя.

Пример кода скрипта, установленного «по умолчанию»::

    sigVerify(tx.bodyBytes, tx.proofs[0], tx.senderPk)

Механика скриптов расширяет возможности по проверке подписи. Транзакция может быть подписана несколькими пользователями или не от имени того адреса, от которого осуществляется. 
Это необходимо, т.к. контракт проверяет только транзакции, исходящие со своего адреса. Соответственно, пользователь формирует транзакцию от имени контракта, подписывает её своей подписью и она успешно валидируется скриптом.

.. important:: Если в вашем скрипте явно не указана проверка подписи, то она не осуществляется. Соответственно, при ручном формировании тела транзакции, возможно отправлять транзакции от имени адреса со скриптом, с подписью другого адреса.


Описать нюансы работы и проверок подписей с контрактами. По умолчанию проверятся подпись, с контрактом не проверяется, можно добавить проверку, можно мультисиг. Внятно написать.
Служебные адреса для контрактов?

пара кейсов типа мультисига только в разрезе бизнес применения


Стэйт аккаунта
~~~~~~~
Описать нюансы работы с дата-транзакциями. Автор\не автора, прикрепление key-values к адресу, перезапись и пр. Внятно написать.


Docker
~~~~~

