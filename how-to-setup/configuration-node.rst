.. _configuration:

Конфигурация ноды
====================

Подключение к существующей сети
----------------------------------------------------

1. Для подключения к существующей блокчейн-сети участнику необходимо в конфигурационный файл ноды внести параметры, заданные инициатором при ее создании (тип используемой криптографии, алгоритм консенсуса, установки genesis-блока и т.д.). Для упрощения подключения рекомендуется запросить конфигурационный файл ноды у одного из участников сетевого взаимодействия
2. В конфигурационном файле ноды:
  - Указать путь до места хранения закрытых ключей пользователя, а также пароль для доступа к ним (параметр "wallet"). Порядок создания ключей приведен в пункте :ref:`1 <address-creation>` раздела :ref:`"Создание новой сети" <creation-new-net>`
  - Задать доступ к :ref:`REST API интерфейсу <rest-api-node>` ноды. Порядок настройки приведен в пунктах :ref:`8-9 <configuration-rest-api>` раздела :ref:`"Создание новой сети" <creation-new-net>`
  - Если нода ранее работала с другой сетью блокчейна Vostok, то удалить данные из папки, указанной в параметре "data-directory" (по умолчанию используется путь ``${user.home}/vostok``
3. :ref:`Запустить ноду <install-node>`

Для подключения к существующим общедоступным сетям Восток воспользуйтесь конфигурационным файлом из таблицы ниже.

==== ================================== ========================
#    Название сети                      Конфигурационный файл
==== ================================== ========================
1    PartnerNet                         `скачать <https://github.com/vostokplatform/Vostok-Releases/releases/download/v0.7.1-RC1/example.conf>`_
==== ================================== ========================

.. _creation-new-net:

Создание новой сети
----------------------------------------------------

Для создания и подключения к новой сети участнику необходимо выполнить следующие действия:

.. _address-creation:

1. Создать участников сети (сгенерировать ключевые пары и адреса)

  .. important:: Для начала функционирования сети должен быть создан как минимум один участник с полномочиями :ref:`"permissioner" <authorization>` (назначает роли другим участникам). Если в вашей сети будет использован Proof-of-Stake алгоритм консенсуса, то также должен быть определен участник, который хранит первоначальный баланс активов создаваемой блокчейн-сети. 
  
  .. tip:: Советуем не использовать один адрес для хранения всего баланса сети. Безопаснее разделить его между несколькими участниками!

  Ключевая пара создается с использованием утилиты  `generators.jar <https://github.com/vostokplatform/Vostok-Releases/releases/download/v0.6.5/generators.jar>`_. Для запуска утилиты требуется указать файл ``accounts.conf``, в котором определяются параметры создания ключей. Команда для запуска ``java -jar generators.jar AccountsGeneratorApp accounts.conf``

  ::

    // accounts.conf listing

    accounts-generator {
      gost-crypto = yes
      chain-id = W
      amount = 1
      wallet = "c:/nodes/testnet-pos.vostoknodes.com/data"
      wallet-password = "some string as password"
    }

  **Описание параметров:**

    - gost-crypto – использовать ГОСТ алгоритмы (yes/no);
    - chain-id – идентифицирующий байт сети, потребуется дальше для внесения в параметр ``address-scheme-character`` в конфигурационный файл ноды ;
    - amount – количество генерируемых адресов;
    - wallet – путь до каталога хранения ключей на ноде, потребуется дальше для внесения в параметр ``wallet > file`` в конфигурационный файл ноды;
    - wallet-password – пароль для доступа к закрытым ключам ноды, потребуется дальше для внесения в параметр ``wallet > password`` в конфигурационный файл ноды.

  После выполнения утилиты в папке, определенной параметром ``wallet``, будет сохранен закрытый ключ участника, а на экране отобразиться его адрес: ``[main] accounts-generator - 3PHxZuKWUo2fum4r5AhpPUHbgWpLUkSyT9y``. Сгенерированные адреса необходимо сохранить для указания в конфигурационном файле ноды. Информация по возможным ролям участников платформы приведена на странице :ref:`"Авторизация участников" <authorization>`
  
  .. note:: 

    Начальный состав участников может быть следующим:
    
    ============  ============= ===========================================
    № участника   Роль          Назначение участника
    ============  ============= ===========================================
    1             permissioner  Выдача разрешений для других участников
    2             miner         Валидация и включение транзакций в блоки
    3             нет           Владелец первоначального баланса сети
    4             нет           Владелец первоначального баланса сети
    ============  ============= ===========================================

.. _configuration-node:

2. На основании `шаблона <https://github.com/vostokplatform/Vostok-Releases/blob/master/configs/testnet.conf>`_ конфигурационного файла ноды:

  1) Указать байт сети, с которым генерировались адреса участников сети (параметр ``chain-id`` в accounts.conf)
  
    ::

      address-scheme-character: "W"

  2) Указать сетевые адреса (hostname) нод, которые будут подключены к сети 
  
    ::

      known-peers = [
        "privatenet-1.example.net:6864",
        "privatenet-2.exemple.net:6864" ]

  3) Указать общий баланс активов сети 
  
    ::

      genesis {
        initial-balance: 100000000000
  
  4) Указать :ref:`адреса участников <address-creation>` – владельцев начального баланса сети

    ::
   
      transactions = [
      {recipient: "3P9nhmAEec4bDKsmLEZy2raimNJTVqedu43", amount: 100000000000} ]

  6) Указать :ref:`адрес участника <address-creation>`, который обладает полномочиями определять роли других участников сети (после создания сети ему будет автоматически назначена роль "permissioner")

    ::

      permissioner = "3PE1beuYnkEpht19AFoBdrGj1baQB3vjgtn"

  7) Указать :ref:`адреса участников <address-creation>`, которые обладают полномочиями создавать новые блоки (после создания сети им будет автоматически назначена роль "miner")
  
    ::
    
      miners = ["3PE1beuYnkEpht19AFoBdrGj1baQB3vjgtn"]

  8) Указать путь и пароль от keystore - места хранения закрытых ключей участников сети, созданных на ноде (параметры ``wallet``, ``wallet-password`` в accounts.conf)

    ::

      wallet {
        file = "c:/nodes/testnet-pos.vostoknodes.com/data"
        password = "some string as password" }

.. _configuration-rest-api:

  9) Указать доступ к :ref:`интерфейсу REST API <rest-api-node>` ноды

    ::
 
      rest-api {
      enable = yes
      bind-address = "0.0.0.0"
      port = 6862

  10) Используя утилиту  `generators.jar <https://github.com/vostokplatform/Vostok-Releases/releases/download/v0.6.5/generators.jar>`_ создать api-key-hash для доступа к REST API ноды. Для запуска утилиты требуется указать файл ``api-key-hash.conf``, в котором определяются параметры создания api-key-hash. Команда для запуска ``java -jar generators.jar apikeyhash api-key-hash.conf``. Полученный в результате исполнения утилиты hash, указать в параметре ``api-key-hash`` конфигурационного файла ноды.

  ::

    // api-key-hash.conf listing

    apikeyhash-generator {
      gost-crypto = yes
      api-key = "some string"
    }

  **Описание параметров:**

    - gost-crypto – использовать криптографические алгоритмы по ГОСТ (yes/no);
    - api-key – фраза, которую требуется указывать для доступа к REST API ноды (подробнее на странице :ref:`REST API ноды <rest-api-node>`).
  

3. Подписать genesis-блок утилитой `generators.jar <https://github.com/vostokplatform/Vostok-Releases/releases/download/v0.6.5/generators.jar>`_. Команда для подписания: ``java -jar generators.jar GenesisBlockGenerator private-blockchain.conf``, где private-blockchain.conf, отредактированный в :ref:`в п. 2 <configuration-node>` конфигурационный файл ноды. После подписания поля ``genesis-public-key-base-58`` и ``signature`` конфигурационного файла будут заполнены значениями открытого ключа и подписи genesis-блока. 

  Пример:

  ::

    genesis-public-key-base-58: "4ozcAj...penxrm"
    signature: "5QNVGF...7Bj4Pc"

  .. important:: Если нода ранее работала с другой сетью блокчейна Vostok, то удалить данные из папки, указанной в параметре "data-directory" (по умолчанию используется путь ``${user.home}/vostok``


4. :ref:`Запустить ноду <install-node>`

